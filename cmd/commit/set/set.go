package set

import (
	"fmt"
	"log"
	"os"
	"path/filepath"

	"github.com/spf13/cobra"

	"github.com/selimacerbas/flow-cli/internal/utils"
)

type SetCmdOptions struct {
	Bin string // CLI binary name to call from the hook
}

var defaults = &SetCmdOptions{
	Bin: "flow",
}

var SetCmd = &cobra.Command{
	Use:   "set",
	Short: "Install (or reinstall) the git commit-msg hook for this repo",
	Run: func(cmd *cobra.Command, _ []string) {
		d := defaults

		root, err := utils.DetectProjectRoot()
		if err != nil {
			log.Fatalf("failed to detect project root: %v", err)
		}

		hookPath := filepath.Join(root, ".git", "hooks", "commit-msg")
		if err := os.MkdirAll(filepath.Dir(hookPath), 0o755); err != nil {
			log.Fatalf("failed to ensure hooks dir: %v", err)
		}

		// Small POSIX shell wrapper that calls your CLI:
		contents := fmt.Sprintf(`#!/bin/sh
# Generated by %s commit set
exec %s commit hook "$1"
`, d.Bin, d.Bin)

		if err := os.WriteFile(hookPath, []byte(contents), 0o755); err != nil {
			log.Fatalf("failed to write commit-msg hook: %v", err)
		}

		fmt.Println("commit-msg hook installed.")
	},
}

func init() {
	d := defaults
	f := SetCmd.Flags()
	f.StringVar(&d.Bin, "bin", d.Bin, "CLI binary name available in PATH (e.g. flow)")
}
